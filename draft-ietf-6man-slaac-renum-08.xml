<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc strict="no" ?>

<rfc updates="4191, 4861, 4862, 8106" category="std"  ipr="trust200902"
docName="draft-ietf-6man-slaac-renum-08">
  <front>
    <title abbrev="Reaction to Renumbering Events">Improving the Robustness of Stateless Address Autoconfiguration (SLAAC) to Flash Renumbering Events</title>


    <author fullname="Fernando Gont" initials="F." surname="Gont">

      <organization abbrev="SI6 Networks">SI6 Networks</organization>
      <address>
        <postal>
          <street>Segurola y Habana 4310, 7mo Piso</street>
<!--          <code>1706</code> -->
          <city>Villa Devoto</city>
          <region>Ciudad Autonoma de Buenos Aires</region>
          <country>Argentina</country>
        </postal>
<!--        <phone>+54 11 4650 8472</phone> -->
        <email>fgont@si6networks.com</email>
        <uri>https://www.si6networks.com</uri>
       </address>
    </author>


     <author fullname="Jan Zorz" initials="J." surname="Zorz">


      <organization abbrev="6connect">6connect</organization>

      <address>
      <!--
        <postal>
          <street>Frankovo naselje 165</street>
         <code>4220</code> 
          <city>Skofja Loka</city>

          <country>Slovenia</country>
        </postal> -->
        <email>jan@6connect.com</email>
<!--        <uri>https://www.6connect.com/</uri> -->
      </address>
    </author>
    

<author initials="R." surname="Patterson" fullname="Richard Patterson">

      <organization>Sky UK</organization>

      <address>

        <email>richard.patterson@sky.uk</email>

      </address>

    </author>

<author initials="J." surname="Linkova" role="editor" fullname="Jen Linkova">

      <organization>Google</organization>

      <address>

        <email>furry13@gmail.com</email>
        <email>furry@google.com</email>

      </address>

    </author>
 

    <date/>

    <area>Internet</area>
    <workgroup>IPv6 Maintenance (6man) Working Group</workgroup>

<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/search.html. -->

<keyword></keyword>



    <abstract>
      <t>In scenarios where network configuration information becomes invalid without explicit notification to the local network, local hosts may end up employing stale information for an unacceptably long period of time, thus resulting in interoperability problems. This document improves the reaction of IPv6 Stateless Address Autoconfiguration to such configuration changes. It formally updates RFC 4191, RFC 4861, RFC 4862, and RFC 8106.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" title="Introduction">
    <t>In scenarios where network configuration information becomes invalid without explicit notification to the local network, local hosts may end up employing stale information for an unacceptably long period of time, resulting in interoperability problems. This issue has been discussed in detail in <xref target="RFC8978"/>.</t>

<t>This document updates the Neighbor Discovery specification <xref target="RFC4861"/>, the Stateless Address Autoconfiguration (SLAAC) specification <xref target="RFC4862"/>, and other associated specifications (<xref target="RFC4191"/> and <xref target="RFC8106"/>), such that hosts can more gracefully deal with the so-called flash renumbering events <xref target="RFC8978"/>, thus improving the robustness of SLAAC.
</t>


</section>

<section title="Requirements Language" anchor="rfc2119">



<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in BCP 14 <xref target='RFC2119' /> <xref target='RFC8174' /> when, and only when, they
      appear in all capitals, as shown here.
</t>

</section>

<section title="Terminology" anchor="term">

<list style="hanging">
<t hangText="DHCPv6-PD:">
<vspace blankLines="0" />DHCPv6 Prefix Delegation <xref target="RFC8415"/>; a mechanism to delegate IPv6 prefixes to clients.
</t>
<t hangText="Flash renumbering:">
<vspace blankLines="0" />A network renumbering event, when an old prefix, used to address hosts, becomes invalid and is replaced by a new prefix. Before the flash renumbering event only the old prefix provides connectivity, and after the flash renumbering only the new one can be used. In other words, there is no period of time when addresses from both prefixes provide connectivity. See <xref target="RFC8978"/> for more detailed discussion of various flash-renumbering scenarios. Note: typically, when flash-renumbering events occur, other IPv6 netowrk configuration information (such as Recursive DNS Server (RDNSS) information <xref target="RFC8106"/>) is affected in the same manner, and thus the term "flash-renumbering" is also employed to refer to a more general "flash-reconfiguration" event.
</t>
<t hangText="PIO:">
<vspace blankLines="0" />Prefix Information Option, <xref target="RFC4861"/>,
</t>
<t hangText="RA:">
<vspace blankLines="0" />Router Advertisement, <xref target="RFC4861"/>.
</t>
<t hangText="SLAAC:">
<vspace blankLines="0" />IPv6 Stateless Address AutoConfugration, <xref target="RFC4862"/>.
</t>
<t hangText="SLAAC host:">
<vspace blankLines="0" />A host which employs SLAAC for IPv6 network configuration.
</t>
<t hangText="SLAAC Router:">
<vspace blankLines="0" />A IPv6 router that advertises configuration information via SLAAC.
</t>
</list>


</section>

<section title="SLAAC reaction to Flash-renumbering Events" anchor="problem">

<t>In some flash-renumbering scenarios, the local router may try to deprecate the stale information by explicitly signaling the network about the renumbering event, whereas in other scenarios the renumbering event may happen inadvertently, without the router explicitly signaling the scenario to local hosts. The following subsections analyze specific considerations for each of these scenarios.</t>

<section title="Renumbering without Explicit Signaling">

<t>In the absence of explicit signalling from SLAAC routers, stale SLAAC configuration information will employed as allowed by the associated lifetimes values. For example, stale prefixes will remain preferred and valid according to the Preferred Lifetime and Valid Lifetime parameters (respectively) of the last received Prefix Information Option (PIO). <xref target="RFC4861"/> specifies the following default values for PIOs:
<list style="symbols">
<t>Preferred Lifetime (AdvPreferredLifetime): 604800 seconds (7 days)</t>
<t>Valid Lifetime (AdvValidLifetime): 2592000 seconds (30 days)</t>
</list>
</t>

<t>This means that, in the absence of explicit signaling by a SLAAC router to deprecate a prefix, it will take a host 7 days (one week) to deprecate the corresponding addresses, and 30 days (one month) to eventually remove any addresses configured for the stale prefix. Clearly, employing such long default values is unacceptable for most deployment scenarios that may experience flash-renumbering events.

<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
<xref target="RFC8978"/> provides an operational recommendation for Customer Edge (CE) routers to override the standard default Preferred Lifetime (AdvPreferredLifetime) and Valid Lifetime (AdvValidLifetime) to 2700 seconds (45 minutes) and 5400 seconds (90 minutes), respectively, thus improving the state of affairs for CE router scenarios.
</t>
</list>
</t>

<t>Similarly, other Neighbor Discovery options employ long default lifetimes that are unacceptable for most deployment scenarios where flash-renumbering events may be experienced.  </t>

<t>Use of more appropriate timers in Router Advertisement messages can help limit the amount of time that hosts will maintain stale configuration information. Thus, <xref target="timers"/> specifies more appropriate (i.e., shorter) default lifetimes for Neighbor Discovery options. <xref target="ras"/> provides recommendations about conveying Neighbor Discovery information into RA messages, to help hosts infer when information may have become stale.</t>

</section>


<section title="Renumbering with Explicit Signaling">

<t>In scenarios where a local router is aware of the renumbering event, it may try to phase out the stale network configuration information. In these scenarios, there are two aspects to be considered:
<list style="symbols">
<t>The amount of time during which the router should continue trying to deprecate the stale network configuration information.</t>
<t>The ability of SLAAC hosts to phase out stale configuration.</t>
</list>
</t>

<t>Since the network could become partitioned at any point in time and for an arbitrarily long period of time, in order to reliably deprecate stale information, a router should try to deprecate such information for its maximum possible lifespan. 
</t>

<t>
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
For example, a router should try to deprecate a prefix (via a PIO) for a period of time equal to the "Preferred Lifetime" used when advertising the prefix, and try to invalidate the prefix for a period of time equal to the "Valid Lifetime" <!--(see Section 12 of <xref target="RFC4861"/>)-->used when advertising the prefix. 
</t>
<t>
Once the number of seconds in the original "Preferred Lifetime" have elapsed, all hosts will have deprecated the corresponding addresses, while once the number of seconds in the "Valid Lifetime" have elapsed, the corresponding addresses will have been invalidated and removed.
</t>
</list>
</t>
<t>Thus, use of more appropriate default lifetimes for Neighbor Discovery options, as specified in <xref target="timers"/>, will reduce the amount of time stale options would need to be advertised by a router to ensure that the associated information is reliably phased out.</t>


<t>In the case of PIOs, in scenarios where a router has positive knowledge that a prefix has become invalid (and thus could signal this condition to local hosts), the current specifications will prevent SLAAC hosts from fully recovering from such stale information: Item "e)" of Section 5.5.3 of <xref target="RFC4862"/> specifies that an RA may never reduce the "RemainingLifetime" to less than 2 hours. Additionally, if the "RemainingLifetime" of an address is less than 2 hours, then a "Valid Lifetime" less than 2 hours will be ignored. The inability to invalidate a stale prefix may prevent communications with the new "owners" of a prefix, and thus is highly undesirable. On the other hand, the Preferred Lifetime of an address may be reduced to any value to avoid the use of addresses from a stale prefix for new communications. 
</t>
<t><xref target="sig-stale-config"/> formally updates <xref target="RFC4862"/> to remove this restriction, such that hosts may react to the advertised "Valid Lifetime" even if it is less than 2 hours. <xref target="init"/> recommends that routers disseminate network configuration information when a network interface is initialized or reconfigured, such that configuration information propagates in a timelier manner.  <!--<xref target="graceful-close"/> recommends that when SLAAC router implementation is disabled, it advertises previously-advertised information with small lifetimes, such that the information is phased out in a graceful manner.-->
</t>
</section>


</section>


      <section title="Improvements to Stateless Address Autoconfiguration (SLAAC)" anchor="slaac-improvements">

<!-- XXX:  XXX what are the documents that are updated?  -->

<t>
The following subsections update <xref target="RFC4191"/>, <xref target="RFC4861"/>, <xref target="RFC4862"/>, and <xref target="RFC8106"/>, such that the problem discussed in this document is mitigated. Each of the following subsections improve different aspects of SLAAC, and thus are mostly orthogonal:

<list style="symbols">
<t>Reduce the default lifetimes of Neighbor Discovery options (<xref target="timers"/>): 
<vspace blankLines="0" />This helps limit the amount of time a host may employ stale information, and also limits the amount of time a router should try to deprecate stale information.</t>

<t>Signal Stale Configuration Information (<xref target="sig-stale-config-2"/>): 
<vspace blankLines="0" />This allows local hosts to learn about stale configuration information in a timelier manner.</t>
<t>Honor PIOs with small Valid Lifetimes (<xref target="sig-stale-config"/>): 
<vspace blankLines="0" />This allows hosts to honor PIOs with a Valid Lifetime less than 2 hours, thus resulting in a timelier reaction to flash-renumbering events.</t>
<t>Recommend routers to retransmit configuration information upon interface initialization/reconfiguration (<xref target="init"/>): 
<vspace blankLines="0" />This helps spread the network configuration information in a timelier manner.</t>
<t>Recommend routers to always send all options (i.e. the complete configuration information) in RA messages, and in the smallest possible number of packets (<xref target="ras"/>): 
<vspace blankLines="0" />This helps propagate the same information to all hosts.</t>
</list>
</t>



<section title="More Appropriate Neighbor Discovery Option Lifetimes" anchor="timers">

<t>This document defines the following variables to be employed for the default lifetimes of Neighbor Discovery options:

<list style="symbols">
<!--
<t>ND_DEFAULT_PREFERRED_LIFETIME: max(AdvDefaultLifetime, ND_RAS_PREFERRED * MaxRtrAdvInterval)</t>
-->
<t>ND_DEFAULT_PREFERRED_LIFETIME: ND_RAS_PREFERRED * MaxRtrAdvInterval</t>
<t>ND_DEFAULT_VALID_LIFETIME: ND_RAS_VALID * MaxRtrAdvInterval</t>
</list>
</t>

<t>where:</t>
<t>
<list style="hanging">
<!--
	<t hangText="AdvDefaultLifetime:"><vspace blankLines="0" />Router configuration variable specified in <xref target="RFC4861"/>, which specifies the value to be placed in the Router Lifetime field of Router Advertisements sent from the interface, in seconds.</t>
-->
	<t hangText="ND_RAS_PREFERRED:"><vspace blankLines="0" />Number of RA messages sent during the ND_DEFAULT_PREFERRED_LIFETIME period. It defaults to 3.</t>
	
	<t hangText="MaxRtrAdvInterval:"><vspace blankLines="0" />Maximum time allowed between sending unsolicited multicast Router Advertisements from the interface, in seconds (as specified in <xref target="RFC4861"/>. It defaults to 600 seconds.</t>
		
	<t hangText="ND_RAS_VALID:"><vspace blankLines="0" />Number of RA messages sent during the ND_DEFAULT_VALID_LIFETIME. It defaults to 8. </t>
<!--	
	<t hangText="max():"><vspace blankLines="0" />A function that computes the maximum of its arguments.</t>
-->
</list>
</t>


<t>
<list style="hanging">
<!--
<t hangText="NOTE:"><vspace blankLines="0" />
ND_DEFAULT_PREFERRED_LIFETIME is set to AdvDefaultLifetime, on the premise that the "Preferred Lifetime" of a Neighbor Discovery option should not span past the "Router Lifetime" of the router that is advertising the option. The expression above computes of maximum among AdvDefaultLifetime and "ND_RAS_PREFERRED * MaxRtrAdvInterval", to accommodate the case where an operator might simply want to disable one local router for maintenance, while still having the router advertise SLAAC configuration information.
</t>
-->
<t hangText="NOTES:"><vspace blankLines="0" />
ND_RAS_PREFERRED and ND_RAS_VALID should be computed with the expression: n &gt;= ln(1 - P)/ln(Loss), where P represents the desired probability of receiving at least one RA for an RA loss rate of "Loss". This expression is further discussed in <xref target="expression"/>.
</t>
<t>ND_RAS_PREFERRED defaults to 3. We note that for e.g. for an RA loss rate of 50% (Loss=0.50), this would result in a probability hosts refreshing this timer before it expires of 0.87500. We note that if the Preferred Lifetime expires, and the host has configured addresses for other prefixes, it will start preferring those other addresses instead. On the other hand, if the host has not configured addresses for other prefixes, it may still employ addresses even if they are not "Preferred" (please see Section 5.5.4 of <xref target="RFC4862"/>). Implementations MAY override the default value of ND_RAS_PREFERRED according to the considerations in <xref target="expression"/>.
</t>
<t>ND_RAS_VALID defaults to 8. We note that for e.g. an RA loss rate of 50% (Loss=0.50), this would result in a probability of hosts refreshing this timer before it expires of 0.99609. Implementations MAY override the default value of ND_RAS_PREFERRED according to the considerations in <xref target="expression"/>.
</t>

<!--
<t>
<xref target="RFC4861"/> specifies the default value of MaxRtrAdvInterval as 600 seconds, and the default value of AdvDefaultLifetime as 3 * MaxRtrAdvInterval. Therefore, when employing default values for MaxRtrAdvInterval and AdvDefaultLifetime, the default value of ND_DEFAULT_PREFERRED_LIFETIME becomes 1800 seconds (30 minutes). We note that when implementing BCP202 <xref target="RFC7772"/>, AdvDefaultLifetime will typically be in the range of 45-90 minutes, and therefore the value of ND_DEFAULT_PREFERRED_LIFETIME will be in the range 45-90 minutes.
</t>
-->
</list>
</t>


<t>This document formally updates <xref target="RFC4861"/> to modify the default value of the Router Lifetime field of RA messages as follows:
<list style="symbols">
<t>AdvDefaultLifetime: ND_DEFAULT_VALID_LIFETIME</t>
</list>

<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
This is to align the Router Lifetime with the recommendations in <xref target="RFC7772"/>.
</t>
</list>
</t>



<t>This document formally updates <xref target="RFC4861"/> to modify the default values of the Preferred Lifetime and the Valid Lifetime of PIOs as follows:
<list style="symbols">
<t>AdvPreferredLifetime: ND_DEFAULT_PREFERRED_LIFETIME</t>
<t>AdvValidLifetime: ND_DEFAULT_VALID_LIFETIME</t>
</list>
</t>

<t>This document formally updates <xref target="RFC4191"/> to specify the default Route Lifetime of Route Information Options (RIOs) as follows:
<list style="symbols">
<t>Route Lifetime: It defaults to ND_DEFAULT_VALID_LIFETIME</t>
</list>
</t>

<t>This document formally updates <xref target="RFC8106"/> to modify the default Lifetime of Recursive DNS Server Options as:
<list style="symbols">
<t>Lifetime: It defaults to ND_DEFAULT_VALID_LIFETIME</t>
</list>
</t>

<t>Additionally, this document formally updates <xref target="RFC8106"/> to modify the default Lifetime of DNS Search List Options as:
<list style="symbols">
<t>Lifetime: It defaults to ND_DEFAULT_VALID_LIFETIME</t>
</list>
</t>

</section>

  

<section title="Signaling Stale Configuration Information" anchor="sig-stale-config-2">


<t>In some scenarios, a SLAAC router may learn that previously advertised information has become stale. For example, this may happen when e.g. the advertised information is derived from information that has been dynamically learned from an upstream router via DHCPv6-PD, but the upstream router is no longer in use or available. In such scenarios, it is paramount that the SLAAC router signals the SLAAC configuration information change, to aid hosts in quickly phasing out the stale network configuration information.</t>
<t>SLAAC routers MUST signal stale configuration information by following the guidelines in Section 3.5 ("Signaling Stale Configuration Information") of <xref target="RFC9096"/>.
</t>



<t>In scenarios where flash renumbering events or configuration changes are frequent, a router may end up in a situation where multiple pieces of information may need to be simultaneously deprecated, and thus the size of Router Advertisement messages could substantially increase. In such scenarios, routers MAY limit themselves to deprecate the most recent configuration that would fit into a single Router Advertisement message without fragmentation. 
</t>

</section>




<section title="Honor Small PIO Valid Lifetimes" anchor="sig-stale-config">

<t>The entire item "e)" (pp. 19-20) from Section 5.5.3 of <xref target="RFC4862"/> is replaced with the following text:
<list style="hanging">
<t>e)  If the advertised prefix is equal to the prefix of an address
      configured by stateless autoconfiguration in the list, the
      valid lifetime and the preferred lifetime of the address should 
      be updated by processing the Valid Lifetime and the Preferred
      Lifetime (respectively) in the received advertisement.
</t>
</list>
</t>






<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>
This change allows hosts to react to the signal provided by a router that has positive knowledge that a prefix has become invalid.
</t>
<t>
The behavior described in <xref target="RFC4862"/> had been incorporated during
         the revision of the original IPv6 Stateless Address
         Autoconfiguration specification (<xref target="RFC1971"/>). At the time, the
         IPNG working group decided to mitigate the attack vector
         represented by Prefix Information Options with very short
         lifetimes, on the premise that these packets represented a bigger
         risk than other ND-based attack vectors <xref target="IPNG-minutes"/>.
<vspace blankLines="1" />
         While reconsidering the trade-offs represented by such
         decision, we conclude that the drawbacks of the aforementioned mitigation outweigh the possible benefits.
<vspace blankLines="1" />
         In scenarios where RA-based attacks are of concern, proper
         mitigations such as RA-Guard <xref target="RFC6105"/> <xref target="RFC7113"/> or SEND <xref target="RFC3971"/> should be
         implemented. 
</t>      

</list>
</t>
</list>
</t>

</section>


<section title="Interface Initialization" anchor="init">



<t>When an interface is initialized or reconfigured, it is paramount that network configuration information is propagated on the corresponding network in a timely manner. Thus, this document replaces the following text from Section 6.2.4 of <xref target="RFC4861"/>:
<list style="hanging">

<t>

   In such cases, the router MAY transmit up to
   MAX_INITIAL_RTR_ADVERTISEMENTS unsolicited advertisements, using the
   same rules as when an interface becomes an advertising interface.
</t>
</list>

with:

<list style="hanging">
<t>
   In such cases, the router MUST transmit 
   MAX_INITIAL_RTR_ADVERTISEMENTS unsolicited advertisements, using the
   same rules as when an interface becomes an advertising interface.
</t>
</list>
</t>
<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Use of stale information can lead to interoperability problems. Therefore, it is important that new configuration information propagates in a timelier manner to all hosts.</t>
</list>
</t>
</list>
</t>




</section>


<section title="Conveying Information in Router Advertisement (RA) Messages" anchor="ras">

<t>Intentionally omitting information in Router Advertisements may prevent the propagation of such information, and may represent a challenge for hosts that need to infer whether they have received a complete set of SLAAC configuration information. As a result, this section recommends that, to the extent that is possible, RA messages contain a complete set of SLAAC information.
</t>

<t>This document replaces the following text from Section 6.2.3 of <xref target="RFC4861"/>:
<list style="hanging">

<t>
   A router MAY choose not to include some or all options when sending
   unsolicited Router Advertisements.  For example, if prefix lifetimes
   are much longer than AdvDefaultLifetime, including them every few
   advertisements may be sufficient.  However, when responding to a
   Router Solicitation or while sending the first few initial
   unsolicited advertisements, a router SHOULD include all options so
   that all information (e.g., prefixes) is propagated quickly during
   system initialization.</t>

<t>
   If including all options causes the size of an advertisement to
   exceed the link MTU, multiple advertisements can be sent, each
   containing a subset of the options. In that case the router SHOULD,
whenever possible, split the information between minimal number of RAs.
</t>
</list>

with:


<list style="hanging">

<t>
   When sending Router Advertisements, a router SHOULD include all 
   options. If including all options would cause the size of an advertisement 
   to exceed the link MTU, multiple advertisements can be sent, each
   containing a subset of the options. In all cases, routers SHOULD
   convey all information using the smallest possible number of 
   packets, and SHOULD convey options of the same type in the same 
   packet to the extent possible.
</t>

<t>
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
Routers MAY send information associated with different provisional domains <xref target="RFC7556"/> in different RAs. 
Similarly, a VRRPv3 <xref target="RFC9568"/> router MAY be configured to send multiple RAs, one per VRRP group.
</t>
</list>
</t>
</list>
</t>

<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Sending information in the smallest possible number of packets was somewhat already implied by the original text in <xref target="RFC4861"/>. Including all options when sending RAs leads to simpler code (as opposed to dealing with special cases where specific information is intentionally omitted), helps hosts infer when they have received a complete set of SLAAC configuration information, and reduces the probability of hosts learning only a partial subset of SLAAC configuration information. Note that while <xref target="RFC4861"/> allowed some RAs to omit some options, to the best of the authors' knowledge, all SLAAC router implementations  always send all options in the smallest possible number of packets. Therefore, this section simply aligns the protocol specifications with existing implementation practice.</t>
<t>
However in some scenarios (including, but limited to multihoming or having a router providing information from multiple configuration or provisional domains (PvD) to non-PvD-aware hosts) it might be desirable to send multiple sets of network configuration information in multiple RAs.
</t>
</list>
</t>
</list>
</t>

</section>

</section>




    <section title="IANA Considerations">
      <t>
This document has no actions for IANA.
</t>
    </section>


<section title="Implementation Status">
<t>[NOTE: This section is to be removed by the RFC-Editor before this document is published as an RFC.]</t>

<t>This section summarizes the implementation status of the updates proposed in this document. In some cases, they correspond to variants of the mitigations proposed in this document (e.g., use of reduced default lifetimes for PIOs, albeit using different values than those recommended in this document). In such cases, we believe these implementations signal the intent to deal with the problems described in <xref target="RFC8978"/> while lacking any guidance on the best possible approach to do it.
</t>


<section title="More Appropriate Lifetime Values" anchor="impl-timers">

<section title="Router Configuration Variables" anchor="impl-router-config">
<section title="rad(8)">
<t>We have produced a patch for OpenBSD's rad(8) <xref target="rad"/> that employs reduced lifetimes for Neighbor Discovery options, as recommended in this document. The patch is available at: &lt;https://www.gont.com.ar/code/fgont-patch-rad-pio-lifetimes.txt&gt;.
</t>
</section>

<section title="radvd(8)">
<t>The radvd(8) daemon <xref target="radvd"/>, normally employed by Linux-based router implementations, currently employs different default lifetimes than those recommended in <xref target="RFC4861"/>. radvd(8) employs the following default values <xref target="radvd.conf"/>:
<list style="symbols">
<t>Preferred Lifetime: 14400 seconds (4 hours)</t>
<t>Valid Lifetime: 86400 seconds (1 day)</t>
</list>
</t>
<t>These values do not follow the recommendations in this document, but nevertheless represent a deviation and improvement from the current standards.</t>
</section>
</section>



</section>
<section title="Honor Small PIO Valid Lifetimes" anchor="impl-sig-stale-config">
<section title="Linux Kernel">
<t>A Linux kernel implementation ohas been committed to the net-next tree. The implementation was produced in April 2020 by Fernando Gont &lt;fgont@si6networks.com&gt;. The corresponding patch can be found at: &lt;https://patchwork.ozlabs.org/project/netdev/patch/20200419122457.GA971@archlinux-current.localdomain/&gt;</t>
</section>

<section title="NetworkManager">
<t>NetworkManager <xref target="NetworkManager"/> processes RA messages with a Valid Lifetime less than 2 hours as recommended in this document.</t>
</section>
</section>

<section title="Conveying Information in Router Advertisement (RA) Messages" anchor="impl-ras">
<t>We know of no implementation that splits network configuration information into multiple RA messages.</t>
</section>


<section title="Recovery from Stale Configuration Information without Explicit Signaling" anchor="impl-stale-config">

<section title="dhcpcd(8)">
<t>The dhcpcd(8) daemon <xref target="dhcpcd"/>, a user-space SLAAC implementation employed by some Linux-based and BSD-derived operating systems, will set the Preferred Lifetime of addresses corresponding to a given prefix to 0 when a single RA from the router that previously advertised the prefix fails to advertise the corresponding prefix. However, it does not affect the corresponding Valid Lifetime. Therefore, it can be considered a partial implementation of this feature.</t>
</section>

</section>



<section title="Other mitigations implemented in products">
<t><xref target="FRITZ"/> is a Customer Edge Router that tries to deprecate stale prefixes by advertising stale prefixes with a Preferred Lifetime of 0, and a Valid Lifetime of 2 hours (or less). There are two things to note with respect to this implementation:
<list style="symbols">
<t>Rather than recording prefixes on stable storage (as recommended in <xref target="RFC9096"/>), this implementation checks the source address of IPv6 packets, and assumes that usage of any address that does not correspond to a prefix currently-advertised by the Customer Edge Router is the result of stale network configuration information. Hence, upon receipt of a packet that employs a source address that does not correspond to a currently-advertised prefix, this implementation will start advertising the corresponding prefix with small lifetimes, with the intent of deprecating it.</t>
<t>Possibly as a result of item "e)" (pp. 19-20) from Section 5.5.3 of <xref target="RFC4862"/> (discussed in <xref target="sig-stale-config"/> of this document), upon first occurrence of a stale prefix, this implementation will employ a decreasing Valid Lifetime, starting from 2 hours (7200 seconds), as opposed to a Valid Lifetime of 0.</t>
</list>
</t>
</section>
</section>



    <section title="Security Considerations">

         <t>The protocol update in <xref target="sig-stale-config"/> could allow an on-link
         attacker to perform a Denial of Service attack against local hosts,
         by sending a forged RA with a PIO with a Valid Lifetime of 0.
         Upon receipt of that packet, local hosts would invalidate the
         corresponding prefix, and therefore remove any addresses
         configured for that prefix, possibly terminating e.g. associated TCP
         connections. However, an attacker may
         achieve similar effects via a number other Neighbor Discovery (ND) attack
         vectors, such as directing traffic to a non-existing node until 
         ongoing TCP connections time out,
         or performing a ND-based man-in-the-middle (MITM) attack and
         subsequently forging TCP RST segments to cause on-going TCP
         connections to be reset. Thus, for all practical purposes,
         this attack vector does not really represent any greater risk
         than other ND attack vectors. As noted in <xref target="sig-stale-config"/> , in scenarios where RA-based attacks
         are of concern, proper
         mitigations such as RA-Guard <xref target="RFC6105"/> <xref target="RFC7113"/> or SEND <xref target="RFC3971"/> should be
         implemented. 
         </t>
    </section>



<section title="Acknowledgments">
<t>The authors would like to thank (in alphabetical order) Mikael Abrahamsson, Tore Anderson, Luis Balbinot, Brian Carpenter, Lorenzo Colitti, Owen DeLong, Gert Doering, Thomas Haller, Nick Hilliard, Bob Hinden, Philip Homburg, Lee Howard, Christian Huitema, Tatuya Jinmei, Erik Kline, Ted Lemon,Albert Manfredi, Roy Marples, Florian Obser, Jordi Palet Martinez, Michael Richardson, Hiroki Sato, Mark Smith, Hannes Frederic Sowa, Dave Thaler, Tarko Tikan, Ole Troan, Eduard Vasilenko, and Loganaden Velvindron, for providing valuable comments on earlier versions of this document.</t>

<t>Fernando would like to thank Alejandro D'Egidio and Sander Steffann for a discussion of these issues, which led to the publication of <xref target="RFC8978"/>, and eventually to this document.</t>
<t>Fernando would also like to thank Brian Carpenter who, over the years, has answered many questions and provided valuable comments that has benefited his protocol-related work.</t>
      
    </section>

  </middle>
  <back>

    <references title="Normative References">
	<?rfc include="reference.RFC.2119" ?>
 
	<?rfc include="reference.RFC.4861" ?>
	<?rfc include="reference.RFC.4862" ?>
	<!-- PvD -->
	<?rfc include="reference.RFC.7556" ?>
	<?rfc include="reference.RFC.7772" ?>
	<?rfc include="reference.RFC.8174" ?>

	</references>




    <references title="Informative References">

	<!-- Original ND spec -->
	<?rfc include="reference.RFC.1971" ?>
	
	<!-- SEND -->
	<?rfc include="reference.RFC.3971" ?>
	<!-- DHCPv6 -->
	<?rfc include="reference.RFC.8415" ?>
	<!-- VRRPv3 -->
	<?rfc include="reference.RFC.9568" ?>

	<reference anchor="IPNG-minutes" target="https://www.ietf.org/proceedings/38/97apr-final/xrtftr47.htm">
		<front>
	
			<title>IPNG working group (ipngwg) Meeting Minutes</title>


			<author>
				<organization>IETF</organization>
			</author>




			<date month="April" year="1997"/>
		</front>
		<!-- April 7-11, 1997 -->
		<seriesInfo name="Proceedings of the thirty-eightt Internet Engineering Task Force" value=""/>
	</reference>
	

	<?rfc include="reference.RFC.4191" ?>
	<?rfc include="reference.RFC.8106" ?>
	
	<?rfc include="reference.RFC.6105" ?>

	<?rfc include="reference.RFC.7113" ?>


	<?rfc include="reference.RFC.8978" ?>
	<?rfc include="reference.RFC.9096" ?>


	<reference anchor="dhcpcd" target="https://roy.marples.name/projects/dhcpcd/">
		<front>
			<title>dhcpcd - a DHCP client</title>


    <author fullname="Roy Marples" initials="R." surname="Marples">

    </author>

			<date/>
		</front>

	</reference>

	<reference anchor="radvd" target="http://www.litech.org/radvd/">
		<front>
			<title>Linux IPv6 Router Advertisement Daemon (radvd)</title>


    <author fullname="Reuben Hawkins" initials="R." surname="Hawkins">

    </author>

    <author fullname="Robin Johnson" initials="R." surname="Johnson">

    </author>
			<date/>
		</front>

	</reference>


	<reference anchor="NetworkManager" target="https://wiki.gnome.org/Projects/NetworkManager">
		<front>
			<title>NetworkManager web site</title>


    <author fullname="NetworkManager" initials="" surname="NetworkManager">

    </author>


			<date/>
		</front>

	</reference>

<!--
	<reference anchor="systemd" target="https://systemd.io/">
		<front>
			<title>systemd web site</title>


    <author fullname="systemd" initials="" surname="systemd">

    </author>


			<date/>
		</front>

	</reference>
-->



	<reference anchor="rad" target="https://cvsweb.openbsd.org/src/usr.sbin/rad/">
		<front>
			<title>OpenBSD Router Advertisement Daemon - rad(8)</title>


    <author fullname="Florian Obser" initials="F." surname="Obser">

    </author>


			<date/>
		</front>

	</reference>

<!--
	<reference anchor="slaacd" target="https://cvsweb.openbsd.org/src/usr.sbin/slaacd/">
		<front>
			<title>OpenBSD SLAAC Daemon - slaacd(8)</title>


    <author fullname="Florian Obser" initials="F." surname="Obser">

    </author>


			<date/>
		</front>

	</reference>
-->

	<reference anchor="radvd.conf" target="https://github.com/reubenhwk/radvd/blob/master/radvd.conf.5.man">
		<front>
			<title>radvd.conf - configuration file of the router advertisement daemon</title>


    <author fullname="Reuben Hawkins" initials="R." surname="Hawkins">

    </author>

    <author fullname="Robin Johnson" initials="R." surname="Johnson">

    </author>
			<date/>
		</front>

	</reference>


	<reference anchor="FRITZ" target="https://www.si6networks.com/2016/02/16/quiz-weird-ipv6-traffic-on-the-local-network-updated-with-solution/">
		<front>
			<title>Quiz: Weird IPv6 Traffic on the Local Network (updated with solution)</title>


    <author fullname="Fernando Gont" initials="F." surname="Gont">

      <organization abbrev="SI6 Networks / UTN-FRH">SI6 Networks</organization>
      <address>
        <postal>
          <street>Segurola y Habana 4310, 7mo Piso</street>
<!--          <code>1706</code> -->
          <city>Villa Devoto</city>
          <region>Ciudad Autonoma de Buenos Aires</region>
          <country>Argentina</country>
        </postal>
        <phone>+54 11 4650 8472</phone>
        <email>fgont@si6networks.com</email>
        <uri>https://www.si6networks.com</uri>
       </address>
    </author>

			<date month="February" year="2016"/>
		</front>
		<seriesInfo name="SI6 Networks" value="Blog"/>
	</reference>


<!--
	<reference anchor="RIPE-690" target="https://www.ripe.net/publications/docs/ripe-690">
		<front>
			<title>Best Current Operational Practice for Operators: IPv6 prefix assignment for end-users - persistent vs non-persistent, and what size to choose</title>


    <author fullname="Jan Zorz" initials="J." surname="Zorz">

    </author>


    <author fullname="Sander Steffannz" initials="S." surname="Zorz">

    </author>
    <author fullname="Primoz Drazumeric" initials="P." surname="Drazumeric">

    </author>
    <author fullname="Mark Townsley" initials="M." surname="Townsley">

    </author>
    <author fullname="Andrew Alston" initials="J." surname="Alston">

    </author>
    <author fullname="Gert Doering" initials="G." surname="Doering">

    </author>
    <author fullname="Jordi Palet" initials="J." surname="Palet">

    </author>
    <author fullname="Jen Linkova" initials="J." surname="Linkova">

    </author>


    <author fullname="Luis Balbinot" initials="L." surname="Balbinot">

    </author>

    <author fullname="Kevin Meynell" initials="K." surname="Meynell">

    </author>


    <author fullname="Lee Howard" initials="L." surname="Howard">

    </author>






			<date month="October" year="2017"/>
		</front>
		<seriesInfo name="RIPE" value="690"/>
	</reference>
-->






    </references>

<section title="Selecting Neighbor Discovery Lifetimes" anchor="expression">
<t>Many default values in from the Neighbor Discovery specification assumes fairly reliable communication of Neighbor Discovery messages. However, as noted in <xref target="RFC7772"/>, communication of multicasted RA messages tends to be rather unreliable for battery-powered devices, which tend to drop many of such messages to reduce the associated effects on power consumption. This section provides an equation that may be employed to override the default values of ND_RAS_PREFERRED and ND_RAS_VALID from <xref target="timers"/>, by computing the number of RA messages that a router should send, such that, given an RA-message loss rate of "Loss", there is a probability of "P" that at least one of such messages is received by the target hosts.</t>

        <artwork align="center" name="" type="" alt=""><![CDATA[
n >= ln(1 - P)/ln(Loss)
]]></artwork>


<t>The following table tabulates the value of P (probability of receiving at least one RA message) for a combination of "n" (number of RA messages sent) and Loss (Loss rate for multicasted RA messages):</t>
<!--
        <artwork align="center" name="" type="" alt=""><![CDATA[
P = 1 - (Loss)^n
]]></artwork>
-->
<table anchor="cat-table" align="center">
<name>Sample values for P = 1 - (Loss)^n</name>
<tbody>
      	  <tr>
            <td align="center">n / Loss</td>
            <td align="center">0.10</td>
            <td align="center">0.20</td>
            <td align="center">0.30</td>
            <td align="center">0.40</td>
            <td align="center">0.50</td>
            <td align="center">0.60</td>
          </tr>      
      	  <tr>
            <td align="center">3</td>
            <td align="center">0.99900</td>
            <td align="center">0.99200</td>
            <td align="center">0.97300</td>
            <td align="center">0.93600</td>
            <td align="center">0.87500</td>
            <td align="center">0.78400</td>
          </tr> 
      	  <tr>
            <td align="center">4</td>
            <td align="center">0.99990</td>
            <td align="center">0.99840</td>
            <td align="center">0.99190</td>
            <td align="center">0.97440</td>
            <td align="center">0.93750</td>
            <td align="center">0.87040</td>
          </tr> 
      	  <tr>
            <td align="center">5</td>
            <td align="center">0.99999</td>
            <td align="center">0.99968</td>
            <td align="center">0.99757</td>
            <td align="center">0.98976</td>
            <td align="center">0.96875</td>
            <td align="center">0.92224</td>
          </tr> 
      	  <tr>
            <td align="center">6</td>
            <td align="center">1.00000</td>
            <td align="center">0.99994</td>
            <td align="center">0.99927</td>
            <td align="center">0.99590</td>
            <td align="center">0.98437</td>
            <td align="center">0.95334</td>
          </tr> 
      	  <tr>
            <td align="center">7</td>
            <td align="center">1.00000</td>
            <td align="center">0.99999</td>
            <td align="center">0.99978</td>
            <td align="center">0.99836</td>
            <td align="center">0.99219</td>
            <td align="center">0.97201</td>
          </tr> 
      	  <tr>
            <td align="center">8</td>
            <td align="center">1.00000</td>
            <td align="center">1.00000</td>
            <td align="center">0.99993</td>
            <td align="center">0.99934</td>
            <td align="center">0.99609</td>
            <td align="center">0.98320</td>
          </tr> 
      	  <tr>
            <td align="center">9</td>
            <td align="center">1.00000</td>
            <td align="center">1.00000</td>
            <td align="center">0.99998</td>
            <td align="center">0.99974</td>
            <td align="center">0.99805</td>
            <td align="center">0.98992</td>
          </tr> 
      	  <tr>
            <td align="center">10</td>
            <td align="center">1.00000</td>
            <td align="center">1.00000</td>
            <td align="center">0.99999</td>
            <td align="center">0.99989</td>
            <td align="center">0.99902</td>
            <td align="center">0.99395</td>
          </tr> 
                 </tbody>
</table>

<!--
        <artwork align="center" name="" type="" alt=""><![CDATA[
P = 1 - (Loss)^n
]]></artwork>
-->

</section>

  </back>
</rfc>

